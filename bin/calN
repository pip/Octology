#!/usr/bin/perl
# FCBLK3LK:calN crE8d by PipStuart <Pip@CPAN.Org> to be an Octology d8-centric utility that is somewhat similar to `cal` && `ncal` in purpose && functionality;
# 2du:fix Orange Month arOw2Bon Day lIn&&bgrnd4YM mRkr2,add -[13*] cal compatbl optnz,add optn2hId wk numz,mk wkNd+Wed colm hIlIt optz,add holidA&&BDay hIlItz,
#   upd8 -help mesg,add special -d d8 hndlng4B4 2000&&fR fUtur,add 2|3|4|6|12 colm wId mOdz,add wId 8wEk zoom wi c8 bclr Year && Month or good figlet optz,
#   mkup betr wkdy colr progrSion than just RoYGCBM mAB wi bg k BhInd wkNdz,add paded YYYYJan wNfitz wEk0 line,apNd wkdy map2botm wi YYYY+1,Xpnd rsn 2 58 lInz,
#   optimIz loop gNer8ion prntout sPd,wudB Useful2hav intractiv c8 mOd l8r 4 d8 selectz too;  # `rsn` ReSize4calN 171x57 shOz past 19-Yearz from 2000-2018;
use strict;use warnings;use utf8;use v5.10;my $VERSION='0.0';my $d8VS='I45MCalN';
use      Octology::a8; # mAB Use @Mon  # mABUse just Time::DaysInMonth && DayOfWeek without nEdng d8.pm BlO? (lIkUsng a8:@sb64 nstd of b8.pm:b64())
use      Octology::d8;use Time::DaysInMonth;my $d8nw;my $d8fY;my $hlpf=0;my $Stxt='';my $optn='';$optn=join(' ',@ARGV) if(@ARGV); # l8r support other formatz
$d8nw   =Octology::d8->new();my $wndx=1;my $Yrmx=16;if(exists($ENV{'COLUMNS'})){$Yrmx=int($ENV{'COLUMNS'} / 9) - 1;} # sIzbak Yearz by term widt (!<2K yet)
if($optn=~s/(^| )(-?-?h(elp)?)( |$)//i){$hlpf=1;} # strip single Help flag to just explain l8st option pRamEterz
if($optn=~s/(^| )(-?-?y)( |$)//i      ){$Yrmx=0;} # strip single Year flag as sOlO column  # below appendz dflt '11' for MD when just given sOlO Year
if($optn=~ /(^| )(-?-?d? ?)([0-9A-Z._]{1,8})/i){my $d8ps=$3;if(length($d8ps) < 3){$d8ps.='1' x (3-length($d8ps));} # lOd custom -dYMD optz
  $d8nw =Octology::d8->new($d8ps);} # unfortun8ly trying just `N y` in my zsh is expanding both aliases to `calN yelp`,trEtng latter as d8 yel8 for normd zone
$d8fY   =Octology::d8->new($sb64[$d8nw->Y()-2000].'11'); # make new now && first of this Year d8 objectz
if   ($hlpf){my $name=$0;$name=~ s/^.*\///;$Stxt.=" $name   - d8 caleNdar gener8ion utility for Octology by $auth
  -h    - print out this Help text and exit;  # default output shows the past many years as columns from left-to-right up to the currently focused d8 Year;
  -y    - print just the fast single-column mode for the current Year (akin to \`cal -y\`);  # l8r add similar -1 and -3 options as well as others for n?cal;
  -dYMD - print out results using specified d8-encoded Year, Month, and Day as focus instead of default today;  # plans to add holiday/birthday highlights;
";}
elsif($Yrmx){my @wndz;my @d8Yz;my @wtxz; # tst loop for past 16Years before current
  for my $Year (0 .. $Yrmx){$wndz[$Year]=1;$d8Yz[$Year]=Octology::d8->new($sb64[$d8nw->Y()-2000-$Year].'11');
    unless($d8Yz[$Year]->dow() > 4){$wndz[$Year]++;$wtxz[$Year][1]=' 'x 9;}} # init many Yearz weekz && stRt d8z
  for my $Year (0 .. $Yrmx){ # try to stuff all gNer8d txt into arrayz to aftrward reloop && join colmz into linez
    $wtxz[$Year][0]=$z.'  '.$R.'S'.$o.'M'.$Y.'T'.$G.'W'.$C.'t'.$B.'F'.$M.'s';
    $wtxz[$Year][$wndz[$Year]]=$z.$R.$sb64[$d8Yz[$Year]->Y()-2000].$o.'1';$wtxz[$Year][$wndz[$Year]].=$z.' 'x $d8Yz[$Year]->dow();# . S('Yc'); # space ovr2stRt
    for my $Mnth (1 .. 12){
      for        (1 ..  days_in(                        $d8Yz[$Year]->Y(),               $Mnth)){
        my $d8fM=Octology::d8->new(               $sb64[$d8Yz[$Year]->Y()-2000].   $sb64[$Mnth].'1');
        my $d8fD=Octology::d8->new(               $sb64[$d8Yz[$Year]->Y()-2000].   $sb64[$Mnth].'V');
        if($Mnth     %  2){$wtxz[$Year][$wndz[$Year]  ].=S('Yc');}
        else              {$wtxz[$Year][$wndz[$Year]  ].=S('Yk');}
        $wtxz[$Year][$wndz[$Year]].=S('Wr') if($Mnth == $d8nw->M() && $_ == $d8nw->D()); #2000+$Year == $d8nw->Y() && 
        $wtxz[$Year][$wndz[$Year]].=$sb64[$_];
        if($Mnth == 12 && $_ == 31){$wtxz[$Year][$wndz[$Year]].=' 'x (6-$d8fD->dow());}
        if    ( ($_  +  $d8fM->dow()                                                            ) % 7){next;}else{$wtxz[$Year][$wndz[$Year]].=$z;}
        if    (  $_  >  days_in(                        $d8Yz[$Year]->Y(),               $Mnth  ) - 7){
          if  ($Mnth <  12){$wtxz[$Year][$wndz[$Year]+1].=$z.   $R .      $sb64[$d8Yz[$Year]->Y()-2000].$o.$sb64[$Mnth + 1 ];}
          else             {$wtxz[$Year][$wndz[$Year]+1].=$z.   $R .      $sb64[$d8Yz[$Year]->Y()-1999].$o.             '1' ;} $wndz[$Year]++;
          if  ($Mnth == 12 && $_ == 31){$wtxz[$Year][$wndz[$Year]].=' 'x 7;}} # pad extra empty blank line for new Year starting Sunday Jan1st
        else               {$wtxz[$Year][$wndz[$Year]+1].=$z;
          if  ($d8nw->M() == $Mnth){$wtxz[$Year][$wndz[$Year]+1].=S('KO');}else{$wtxz[$Year][$wndz[$Year]+1].=$K;}
                            $wtxz[$Year][$wndz[$Year]+1].=                $sb64[$wndz[$Year]];
          if  ($Mnth == $d8nw->M() && abs($_ - $d8nw->D()) < 7 - $d8fM->dow()){
                            $wtxz[$Year][$wndz[$Year]+1].='>';}
          else{             $wtxz[$Year][$wndz[$Year]+1].=' ';} $wndz[$Year]++;}}}}
  for(0..54){for my $Year (0 .. $Yrmx){
      if(defined($wtxz[$Yrmx-$Year]) && defined($wtxz[$Yrmx-$Year][$_])){$Stxt.=$wtxz[$Yrmx-$Year][$_];}else{$Stxt.=$z.' 'x 9;}} $Stxt.="$z\n"; }}
else{ # much faster && simpler original single-column current Year only mode
  $Stxt.='  '.$R.'S'.$o.'M'.$Y.'T'.$G.'W'.$C.'t'.$B.'F'.$M.'s'."\n";            $wndx++ unless($d8fY->dow() > 4); # this nstd of srch4 both Jan4&&Thu in 1stwk
  $Stxt.=$R.$sb64[$d8nw->Y()-2000].$o.'1';$Stxt.=' 'x $d8fY->dow() . S('Yc'); # space over to dow of d8fY then loop thru Monthz && weekz
  for my $Mnth (1 .. 12){
    for        (1 ..  days_in(    $d8nw->Y(),   $Mnth)){
      if($Mnth     %  2){$Stxt.=S('Yc');}
      else              {$Stxt.=S('Yk');}
      $Stxt.=S('Wr')  if($Mnth == $d8nw->M() && $_ == $d8nw->D());$Stxt.= $sb64[$_   ];
      my $d8fM=Octology::d8->new(               $sb64[$d8nw->Y()-2000].   $sb64[$Mnth].'1');  # make d8 object of loop thru Month's beginning
      if    ( ($_  +  $d8fM->dow(          )                    ) % 7){    next            ;} # used 2B unless around all BlO but next loop shud sAv indNt lvl
      if    (  $_  >  days_in(    $d8nw->Y(),   $Mnth           ) - 7){         $wndx++    ;
        if  ($Mnth < 12){$Stxt.=$z."\n$R".      $sb64[$d8nw->Y()-2000].$o.$sb64[$Mnth + 1 ];}
        else            {$Stxt.=$z."\n$R".      $sb64[$d8nw->Y()-1999].$o.             '1' ;}}
      else              {$Stxt.=$z;$Stxt.=S('KO')  if($d8nw->M()       ==       $Mnth     );
                         $Stxt.=   "\n$K".                                $sb64[$wndx++   ];
        if  ($Mnth == $d8nw->M() &&  abs($_ -         $d8nw->D()) < 7){
                         $Stxt.=   ">";}
        else{            $Stxt.=   ' ';}}}}}
open my $out8,'>&',STDOUT or die "Can't open  duplic8 STDOUT handle: $!";binmode $out8,':encoding(UTF-8)';print $out8 $Stxt; # crE8 local duplic8 of global
close   $out8             or die "Can't close duplic8 STDOUT handle: $!";
# From HTTPS://MetaCPAN.Org/pod/Time::Piece#Week-Number ISO 8601 defines weeks 1..53 begin on a Monday && week 1 of Year includes Jan4th && 1st Thursday...
#   in other words, if the 1st Monday of January is the 2nd, 3rd, or 4th, the preceding days of January are part of the final week from the preceding Year;
#  F1  Jan  F2  Feb  F3  Mar  F4  Apr  F5  May  F6  Jun  F7  Jul  F8  Aug  F9  Sep  FA  Oct  FB  Nov  FC  Dec
#  SMTWtFs  SMTWtFs  SMTWtFs  SMTWtFs  SMTWtFs  SMTWtFs  SMTWtFs  SMTWtFs  SMTWtFs  SMTWtFs  SMTWtFs  SMTWtFs
#      123  1234567  1234567     1234       12   123456     1234        1    12345      123  1234567    12345
#  456789A  89ABCDE  89ABCDE  56789AB  3456789  789ABCD  56789AB  2345678  6789ABC  456789A  89ABCDE  6789ABC
#  BCDEFGH  FGHIJKL  FGHIJKL  CDEFGHI  ABCDEFG  EFGHIJK  CDEFGHI  9ABCDEF  DEFGHIJ  BCDEFGH  FGHIJKL  DEFGHIJ
#  IJKLMNO  MNOPQRS  MNOPQRS  JKLMNOP  HIJKLMN  LMNOPQR  JKLMNOP  GHIJKLM  KLMNOPQ  IJKLMNO  MNOPQRS  KLMNOPQ
#  PQRSTUV           TUV      QRSTU    OPQRSTU  STU      QRSTUV   NOPQRST  RSTU     PQRSTUV  TU       RSTUV  
#                                      V                          UV                                         
#    SMTWtFs    SMTWtFs  # week list almost fits 160x50 terminal && altern8z bclr for Monthz, now also includes single b64 character for most week numberz
#  F1    123  F7STU1234  # with all the default  160x50 alignment, almost all top 17 Januarys scroll off, leaving very close to 187 (17*11) total Monthz seen
#    456789A    56789AB
#    BCDEFGH    CDEFGHI
#    IJKLMNO    JKLMNOP
#    PQRSTUV  F8QRSTUV1
#  F21234567    2345678
#    89ABCDE    9ABCDEF
#    FGHIJKL    GHIJKLM
#    MNOPQRS    NOPQRST
#  F31234567  F9UV12345
#    89ABCDE    6789ABC
#    FGHIJKL    DEFGHIJ
#    MNOPQRS    KLMNOPQ
#  F4TUV1234  FARSTU123
#    56789AB    456789A
#    CDEFGHI    BCDEFGH
#    JKLMNOP    IJKLMNO
#  F5QRSTU12    PQRSTUV
#    3456789  FB1234567
#    ABCDEFG    89ABCDE
#    HIJKLMN    FGHIJKL
#    OPQRSTU    MNOPQRS
#  F6V123456  FCTU12345
#    789ABCD    6789ABC
#    EFGHIJK    DEFGHIJ
#    LMNOPQR    KLMNOPQ
#               RSTUV
