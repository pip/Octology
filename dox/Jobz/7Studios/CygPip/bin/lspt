#!/usr/bin/perl -w
#l | perl -pe s/(\w{3}\s+\d+\s+\d{2}:\d{2})/`pt -c "$1 2004"`/e
use strict;
use Math::BaseCnv qw(:all);
use Time::PT;

my $list = ''; my @ldat = `ls -l`;
foreach(@ldat) {
  if($_ =~ /^(\S{10})\s.*\s(\d+)\s+(\w{3}\s+\d+\s+\d{2}:\d{2})/) {
    my $prmz = $1; my $cmpr = $prmz;
    my $fsiz = $2;
    my $stat = $3;
    my $b6fs = b64($fsiz); $b6fs = ' ' x (length($fsiz) - length($b6fs)) . $b6fs;
    # @s=split(/ /,scalar(localtime((stat(shift))[9])));print \"@s\";
    # use stat() instead of just appending '2004'
    my $ptim = Time::PT->new('verbose' => "$stat 2004");
    my $pcol = $ptim->color('ansi') . "\e[0;30m";
    if(length($pcol) < (8*5 + 7)) {
      $pcol .= '0' x (5 - int((length($pcol) - 7) / 8));
    }
    $pcol .= "\e[1;32m";
    $cmpr =~ s/r--/\e[1;34m4\e[1;32m/g;
    $cmpr =~ s/r-x/\e[1;35m5\e[1;32m/g;
    $cmpr =~ s/rw-/\e[1;36m6\e[1;32m/g;
    $cmpr =~ s/rwx/\e[1;31m7\e[1;32m/g;
    $cmpr =~ s/rws/\e[1;33m7\e[1;32m/g;
    s/^$prmz/$cmpr/;
    s/$fsiz/$b6fs/;
    s/$stat/$pcol/;
    $list .= $_;
  }
}
print $list;
